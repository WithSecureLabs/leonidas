---
name: Privileged Container
author: Leo Tsaousis
category: "Privilege Escalation"
description: |
  Create a privileged container

  A privileged container is a container that can access the host with all of the root capabilities of the host machine. This allows it to view, interact and modify processes, network operations, IPC calls, the file system, mount points, SELinux configurations etc. as the root user on the host.
mitre_ids:
  - T611
platform: kubernetes
permissions:
  - namespaced: true
    apiGroups: [""] 
    resources:
    - pods
    verbs: 
    - create
    - get  
input_arguments:
  custom_yaml:
    description: YAML manifest for the pod - leave this empty to use the default spec that performs the TTP
    type: file
    value: 
      apiVersion: v1
      kind: Pod
      metadata:
        name: privileged-ubuntu
        labels:
          app: privileged-ubuntu
      spec:
        containers:
        - image: ubuntu
          name: privileged-ubuntu
          command: ["/bin/sh", "-c", "sleep infinity"]
          securityContext:
            privileged: true
            runAsUser: 0
executors:
  sh:
    code: |
      kubectl -f /tmp/custom.yml apply
  leonidas_kube:
    implemented: True
detection:
  sigma_id: c5cd1b20-36bb-488d-8c05-486be3d0cb97
  status: experimental
  level: low
  sources: 
  - name: audit
    attributes: 
      verb: create
      apiGroup: ""
      resource: pods
      privileged: True # this requires updating of the SigmaHQ/pySigma-backend-elasticsearch project to map 
                       # privileged=kubernetes.audit.responseObject.spec.containers.securityContext.privileged
references: 
- https://microsoft.github.io/Threat-Matrix-for-Kubernetes/techniques/Privileged%20container/
- https://kubenomicon.com/Privilege_escalation/Privileged_container.html
